import com.android.build.gradle.tasks.ExtractDeepLinksTask
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

plugins {
    id("com.starter.application.android")
    id("com.starter.easylauncher")
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.parcelize")
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
}

projectConfig {
    javaFilesAllowed true
}

def findProperty(key) {
    return System.getenv(key) ?: properties[key] ?: ""
}

android {
    defaultConfig {
        applicationId "io.github.wykopmobilny"

        testInstrumentationRunner = "io.github.wykopmobilny.DefaultTestRunner"
        buildConfigField 'String', 'APP_SECRET', "\"${findProperty("wykop.secretKey")}\""
        buildConfigField 'String', 'APP_KEY', "\"${findProperty("wykop.appKey")}\""
        buildConfigField "String", "GOOGLE_KEY", "\"${findProperty("wykop.googleKey")}\""
        resValue "string", "GOOGLE_API_KEY", "\"${findProperty("wykop.googleKey")}\""
    }

    signingConfigs {
        named("debug") {
            storeFile rootProject.file("keys/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        named("debug") {
            signingConfig signingConfigs.getByName("debug")
            applicationIdSuffix ".debug"
        }
        named("release") {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
        resValues = true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/*.kotlin_module'
    }
    lintOptions {
        checkReleaseBuilds false
        disable("UnknownNullness")
        disable("Range")
    }
}

kotlinter {
    experimentalRules = false
}

repositories {
    jcenter()
    google()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation projects.data.wykop.remote
    implementation projects.data.github.remote
    implementation projects.data.scraper.remote
    implementation projects.data.storage.android
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.5.0'
    def lifecycleVersion = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.work:work-runtime:2.5.0"
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    def exoplayerVersion = "2.14.0"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-okhttp:$exoplayerVersion"
    def kotlin_coroutines_version = "1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlin_coroutines_version"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    implementation platform("com.google.firebase:firebase-bom:28.1.0")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"

    // To remove
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    implementation "org.ocpsoft.prettytime:prettytime:5.0.1.Final"
    implementation 'com.github.feelfreelinux:Slidr:2.2.1'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"

    def jspoonVersion = "1.3.2"
    implementation "pl.droidsonroids:jspoon:$jspoonVersion"
    implementation "pl.droidsonroids.retrofit2:converter-jspoon:$jspoonVersion"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'
    implementation 'org.jetbrains:markdown:0.2.4'

    // Dagger 2
    def daggerVersion = "2.36"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // Glide
    def glide = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    kaptAndroidTest "com.github.bumptech.glide:compiler:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide"

    // Android-Job
    implementation "com.evernote:android-job:1.4.2"
    implementation 'com.github.suckgamony.RapidDecoder:library:7cdfca47fa'

    // Unit tests
    testImplementation 'junit:junit:4.13.2'
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    androidTestImplementation("androidx.test:core-ktx:1.3.0")
    androidTestImplementation("androidx.test.ext:junit-ktx:1.1.2")
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0')
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.3.0')
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.1")
}

tasks.named("detekt") {
    baseline = file("$rootDir/detekt-baseline.xml")
}

tasks.register("detektProjectBaseline", DetektCreateBaselineTask) {
    description = "Overrides current baseline."
    ignoreFailures.set(true)
    buildUponDefaultConfig.set(true)
    setSource(files(rootDir))
    config.setFrom(tasks.getByName("detekt").config)
    baseline.set(file("$rootDir/detekt-baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/resources/**")
    exclude("**/build/**")
}

/**
 * Workaround for: https://issuetracker.google.com/issues/187096666
 */
tasks.withType(ExtractDeepLinksTask).configureEach {
    def easylauncherTaskName = name.replace("extractDeepLinks", "easylauncher")
    // Workaround for: https://github.com/gradle/gradle/issues/8057
    if (tasks.getNames().contains(easylauncherTaskName)) {
        dependsOn(easylauncherTaskName)
    }
}

easylauncher {
    buildTypes {
        debug {
            filters = customRibbon(ribbonColor: "#2F4F4F", position: "bottom")
        }
    }
}
